load (7,1);
load (8,2);
load (23,17);
load (24,18);

//PROCESS 0
[READY_LIST+0]=0;
//load (25,21);
//load (26,22);
//load (27,23);
PTBR=1024;
PTLR=4;
[PTBR+0]=21;
//[MEM_LIST + 25] = 0;

[PTBR+1]="00";
[PTBR+2]=22;
//[MEM_LIST + 2] = 0;
[PTBR+3]="00";
[PTBR+4]=23;
//[MEM_LIST + 2] = 0;
[PTBR+5]="00";
[PTBR+6]=30;

[PTBR+7]="01";

[READY_LIST + 31]=0;
SP=3*512;
[28*512]=0;
alias j S2;
      j=448;
    while(j<512) do
         [DISK_LIST + j]=0;
          j=j+1;
    endwhile;
 store (6,20);



alias count S1;
count=15;
while(count<30) do
      [READY_LIST +count +0]=-1;               //init process's open file tbale is set 
      [READY_LIST +count + 1]=-1;                  // all entries are set to invalid initially
      count=count+2;
endwhile;
load (11,5);
load (12,6);
load (9,3);
load (10,4);
load (5,19);
load (6,20);
load (13,7);
load (14,8);
load (15,9);
load (16,10);
load (17,11);
load (18,12);
load (19,13);
load (20,14);
load (21,15);
load (22,16);
alias i S0;
i=0;
while(i<128) do
[FILE_TABLE + i +0]=-1;
[FILE_TABLE + i +1]= 0;
i=i+2;
endwhile;
i=0;
while(i<=24) do
[MEM_LIST + i]=1;
i=i+1;
endwhile;
i=25;
while(i<64) do
[MEM_LIST + i]=0;
i=i+1;
endwhile;
[MEM_LIST + 30] = 1;
i=0;
while(i<32) do
[READY_LIST + i*32 +1]=0;
i=i+1;
endwhile;
[READY_LIST+1]=2;

// PROCESS 1
//[READY_LIST+32]=1;
//load (29,25);
//alias PTBR_Process1 S0;
//PTBR_Process1=PTBR + 1*8;
//[PTBR_Process1+0]=29;
//[PTBR_Process1+1]="01";
//[PTBR_Process1+2]=-1;
//[PTBR_Process1+3]="00";
//[PTBR_Process1+4]=-1;
//[PTBR_Process1+5]="00";
//[PTBR_Process1+6]=30;
//[PTBR_Process1+7]="01";
//[READY_LIST+33]=1;
//[READY_LIST+34]=3*512;//bp
//[READY_LIST+35]=3*512;
//[READY_LIST+36]=0;
//[READY_LIST+37]=PTBR_Process1;
//[READY_LIST+38]=4;//ptlr
ireturn;
